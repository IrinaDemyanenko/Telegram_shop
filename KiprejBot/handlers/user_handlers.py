from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from handlers.menu_handlers import show_main_menu
from database.orm_requests import (
    orm_get_all_products,
    orm_get_user_by_telegram,
    orm_get_orders_for_user,
    orm_get_addresses_for_user
)
from database.db import async_session
from database.models import Order
from keyboards.main_menu import get_main_menu
from utils.user_check import is_admin, is_registered



user_router = Router()

@user_router.message(Command("start"))
async def start_handler(message: Message, session: AsyncSession):
    # user_id = message.from_user.id
    # admin_status = await is_admin(session, user_id)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    # #registered_status = await is_registered(session, user_id)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    # await message.answer(
    #     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:",
    #     reply_markup=get_main_menu(
    #         is_admin=admin_status,
    #         )
    # )
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!")
    await show_main_menu(message, session)


# @user_router.message(lambda message: message.text == "üè¨ –ö–∞—Ç–∞–ª–æ–≥")   # üì¶
# async def catalog_handler(message: Message, session: AsyncSession):
#     products = await orm_get_all_products(session)
#     if products:
#         text = "–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:\n"
#         for prod in products:
#             text += f"{prod.id}. {prod.name} ‚Äî {prod.price} —Ä—É–±.\n"
#         await message.answer(text)
#     else:
#         await message.answer("–ú–∞–≥–∞–∑–∏–Ω –ø–æ–∫–∞ –ø—É—Å—Ç–æ–π.")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
@user_router.message(lambda message: message.text == "üõç –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def my_orders_handler(message: Message, session: AsyncSession):
    user = await orm_get_user_by_telegram(session, message.from_user.id)
    if user:
        orders = await orm_get_orders_for_user(session, user)
        if orders:
            text = "–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤:\n"
            for order in orders:
                text += (
                    f"–ó–∞–∫–∞–∑ #{order.id}: —Å—É–º–º–∞ {order.total_amount} —Ä—É–±, "
                    f"–æ–ø–ª–∞—á–µ–Ω: {'–î–∞' if order.is_paid else '–ù–µ—Ç'}, —Å—Ç–∞—Ç—É—Å: {order.shipping_status or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
                )
            await message.answer(text)
        else:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
    else:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥—Ä–µ—Å–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
@user_router.message(lambda message: message.text == "üè† –ú–æ–∏ –∞–¥—Ä–µ—Å–∞")
async def my_addresses_handler(message: Message, session: AsyncSession):
    user = await orm_get_user_by_telegram(session, message.from_user.id)
    if user:
        addresses = await orm_get_addresses_for_user(session, user)
        if addresses:
            text = "–í–∞—à–∏ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:\n"
            for addr in addresses:
                text += (
                    f"{addr.id}. {addr.address_line}, {addr.city}, {addr.country}"
                    f" (–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {addr.postal_code or '–Ω–µ —É–∫–∞–∑–∞–Ω'})\n"
                )
            await message.answer(text)
        else:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤.")
    else:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")


@user_router.message(Command("update_address"))
async def update_address_handler(message: Message):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FSM
    await message.answer("–§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
