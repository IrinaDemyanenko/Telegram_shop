from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from keyboards.catalog_keyboards import get_category_inline_keyboard, get_pagination_keyboard
from utils.callback_data_filters import CategoryCallbackFactory
from database.orm_requests import orm_get_available_sizes, orm_get_filtered_products
from keyboards.catalog_keyboards import get_size_selection_inline_keyboard
from utils.product_card_formatter import format_product_card_text
from utils.pagination import custom_pagination


catalog_router = Router()


@catalog_router.message(F.text == "üè¨ –ö–∞—Ç–∞–ª–æ–≥")
async def show_catalog(message: Message, session: AsyncSession):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏."""
    keyboard = await get_category_inline_keyboard(session)
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω Kiprej!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:",
        reply_markup=keyboard
    )

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ '–∫–∞—Ç–µ–≥–æ—Ä–∏—é' –∏–ª–∏ '–≤—Å–µ —Ç–æ–≤–∞—Ä—ã'
@catalog_router.callback_query(CategoryCallbackFactory.filter(F.action == 'size'))
async def show_size_options(
    callback: CallbackQuery,
    callback_data: CategoryCallbackFactory,
    session: AsyncSession
):
    """Pass"""
    category_id = callback_data.category_id
    sizes = await orm_get_available_sizes(session, category_id)

    keyboard = await get_size_selection_inline_keyboard(category_id, sizes)

    # –≤–µ–¥—ë–º –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —ç—Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏, –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    await callback.message.edit_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë"',
        reply_markup=keyboard
    )
    # –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–∞—Å–∏–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ–¥—É–º–∞–ª–∏, —á—Ç–æ –±–æ—Ç –∑–∞–≤–∏—Å
    await callback.answer()


@catalog_router.callback_query(CategoryCallbackFactory.filter(F.action == 'show'))
async def show_filtered_products(
    callback: CallbackQuery,
    callback_data: CategoryCallbackFactory,
    session: AsyncSession
):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–∞–∑–º–µ—Ä—É.
    """
    category_id = callback_data.category_id
    selected_size = callback_data.size
    page = callback_data.page

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    products = await orm_get_filtered_products(session, category_id, selected_size)

    if not products:
        await callback.answer("–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.", show_alert=True)
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å 10 —Ç–æ–≤–∞—Ä–∞–º–∏
    products_on_page = custom_pagination(products, page=page, page_size=10)

    if not products_on_page:
        await callback.answer("–ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.", show_alert=True)
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä (–∏–ª–∏ –≤—Å–µ, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ)
    for product in products_on_page:
        images = product.images
        if not images:
            continue  # –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–ª—É—à–∫—É "–ù–µ—Ç —Ñ–æ—Ç–æ"

        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        image = images[0].file_path

        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç (–ø–æ —Ä–∞–∑–º–µ—Ä—É) –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë", –∏ —Ä–∞–∑–º–µ—Ä –Ω–µ –≤—ã–±—Ä–∞–Ω (size == ''), —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å variant, –∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å None –≤ format_product_card_text
        variant = next((v for v in product.variants if v.size == selected_size), None) if selected_size else None

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
        caption = format_product_card_text(
            product, variant, image_index=0, total_images=len(images)
            )
        keyboard = get_product_card_keyboard(product.id, total_images=len(images))

        await callback.message.answer_photo(
            photo=image,
            caption=caption,
            parse_mode='HTML',
            reply_markup=keyboard
        )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (—Ç –µ –∫–Ω–æ–ø–∫–∏ –≤–ø–µ—Ä—ë–¥-–Ω–∞–∑–∞–¥)
    pagination_keyboard = get_pagination_keyboard(category_id, selected_size, page)

    await callback.message.answer(
        text='–°—Ç—Ä–∞–Ω–∏—Ü–∞:',
        reply_markup=pagination_keyboard
    )

    await callback.answer()
