import asyncio
import random
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from keyboards.main_menu import get_main_menu
from keyboards.admin_keyboards import product_menu, admin_main_menu
from utils.user_check import is_admin, is_registered
from sqlalchemy.ext.asyncio import AsyncSession
from database.models import User  # –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from database.db import async_session  # –ò–º–ø–æ—Ä—Ç —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from utils.navigation import go_to_main_menu
from utils.role_decorator import admin_required
from keyboards.admin_keyboards import admin_main_menu, category_menu, product_menu





menu_router = Router()


@menu_router.message(Command("menu"))
@menu_router.message(F.text == "–ú–µ–Ω—é")  # –º–µ–Ω—é –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏ –ø–æ —Ç–µ–∫—Å—Ç—É –ú–µ–Ω—é
async def show_main_menu(message: Message, session: AsyncSession):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É—á—ë—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    admin_status = await is_admin(session, user_id)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    text_variants = ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–ú–µ–Ω—é", "–ú–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞", "–ú–∞–≥–∞–∑–∏–Ω"]
    await message.answer(
        random.choice(text_variants),
        reply_markup=get_main_menu(
            is_admin=admin_status,
            )
        )

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é –ø–æ –∫–Ω–æ–ø–∫–µ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@menu_router.message(Command("admin_menu"))
@menu_router.message(F.text == "üîß –ê–¥–º–∏–Ω-–º–µ–Ω—é")
async def show_admin_menu(message: Message, session: AsyncSession):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–¥–º–∏–Ω-–º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)."""
    user_id = message.from_user.id
    admin_status = await is_admin(session, user_id)

    if admin_status:
        await message.answer("üîß –ê–¥–º–∏–Ω-–º–µ–Ω—é:", reply_markup=admin_main_menu)
    else:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–º–µ–Ω—é.")


# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
@menu_router.message(F.text == "üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
@admin_required
async def category_management_menu(message: Message):
    await message.answer("–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:", reply_markup=category_menu)

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
@menu_router.message(F.text == "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏")
@admin_required
async def product_management_menu(message: Message):
    await message.answer("–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏:", reply_markup=product_menu)

# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@menu_router.message(F.text == "üîô –í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
@menu_router.message(F.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
@admin_required
async def back_to_main_menu(message: Message, session: AsyncSession):
    await go_to_main_menu(message, session)
