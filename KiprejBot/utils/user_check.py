from sqlalchemy.ext.asyncio import AsyncSession
from database.models import User
from sqlalchemy.future import select
from database.orm_requests import orm_get_user_role

async def user_check(session: AsyncSession, telegram_id: int) -> User | None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î.

    session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy.
    telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    return: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ None.
    """
    query = select(User).where(User.telegram_id == telegram_id)
    return await session.scalar(query)


async def is_registered(session: AsyncSession, telegram_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∏–Ω–∞—á–µ False.
    """
    query = select(User).where(User.telegram_id == telegram_id)
    result = await session.scalar(query)

    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: user_id={telegram_id}, –Ω–∞–π–¥–µ–Ω={bool(result)}")  # –û—Ç–ª–∞–¥–∫–∞

    return result is not None



async def is_admin(session: AsyncSession, user_id: int) -> bool:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ —Å—É–ø–µ—Ä—é–∑–µ—Ä, –∏–Ω–∞—á–µ False."""
    role = await orm_get_user_role(session, user_id)
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞: user_id={user_id}, role={role}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
    return role in ["admin", "superuser"]
